export const data = {
  matchsFront: [
    {
      value: {
        studentNameOne: "ISABELLY DA COSTA WILHELM",
        studentNameTwo: "IsabellyWilhelm",
        table:
          '<HTML>\n<HEAD>\n<TITLE>Top</TITLE>\n</HEAD><BODY BGCOLOR=white><CENTER><TABLE BORDER="1" CELLSPACING="0" BGCOLOR="#d0d0d0"><TR><TH>./repositories/CineFlex_-_Front/ISABELLY_DA_COSTA_WILHELM/ (98%)<TH><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_98.gif" BORDER="0" ALIGN=left><TH>./students-front5680285040502497/IsabellyWilhelm/ (98%)<TH><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_98.gif" BORDER="0" ALIGN=left><TH>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#0" NAME="0" TARGET="0">255-707</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#0" NAME="0" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_58.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#0" NAME="0" TARGET="1">344-796</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#0" NAME="0" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_58.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#1" NAME="1" TARGET="0">710-793</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#1" NAME="1" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#1" NAME="1" TARGET="1">256-339</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#1" NAME="1" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#2" NAME="2" TARGET="0">90-157</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#2" NAME="2" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#2" NAME="2" TARGET="1">41-108</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#2" NAME="2" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#3" NAME="3" TARGET="0">212-254</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#3" NAME="3" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_5.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#3" NAME="3" TARGET="1">207-250</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#3" NAME="3" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_5.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#4" NAME="4" TARGET="0">158-208</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#4" NAME="4" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_4.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#4" NAME="4" TARGET="1">132-183</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#4" NAME="4" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_4.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#5" NAME="5" TARGET="0">37-59</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#5" NAME="5" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#5" NAME="5" TARGET="1">109-131</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#5" NAME="5" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#6" NAME="6" TARGET="0">4-31</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#6" NAME="6" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#6" NAME="6" TARGET="1">4-31</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#6" NAME="6" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#7" NAME="7" TARGET="0">59-82</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#7" NAME="7" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_2.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#7" NAME="7" TARGET="1">184-206</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#7" NAME="7" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_2.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#8" NAME="8" TARGET="0">209-211</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-0.html#8" NAME="8" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_0.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#8" NAME="8" TARGET="1">340-342</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match2-1.html#8" NAME="8" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_0.gif" ALT="link" BORDER="0" ALIGN=left></A>\n</TABLE></CENTER></BODY></BODY></HTML>',
        columns: [
          '<HTML>\n<HEAD>\n<TITLE>./repositories/CineFlex_-_Front/ISABELLY_DA_COSTA_WILHELM/</TITLE>\n</HEAD>\n<BODY BGCOLOR=white>\n<HR>\n./repositories/CineFlex_-_Front/ISABELLY_DA_COSTA_WILHELM/<p><PRE>\n&gt;&gt;&gt;&gt; file: main.js\n\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_App.js ------------------- &lt;/filePath&gt; */ \n<A NAME="6"></A><FONT color = #00FF00><A HREF="match2-1.html#6" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { BrowserRouter, Routes, Route } from "react-router-dom";\nimport { useState } from \'react\';\nimport Topbar from "./components/Bars/Topbar";\nimport Movies from "./components/Movies";\nimport MovieSection from "./components/MovieSection";\nimport SectionDetails from "./components/Sectionsecond";\nimport SuccessScreen from "./components/Success";\nimport Loaging from "./assets/img/loading.png";\nimport "./css/reset.css";\nimport "./css/style.css";\n\nexport default function App() {\n  const [finalObject, setFinalObject] = useState({});\n\n  function updateObject(currentObject, sectionID, object) {\n    setFinalObject(object = { ...currentObject, sectionID });\n  }\n\n  return(\n    &lt;BrowserRouter&gt;\n      &lt;Topbar /&gt;\n      &lt;Routes&gt;\n        &lt;Route path="/" element={&lt;Movies loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/movie-section/:idMovie" element={&lt;MovieSection loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/section-details/:idSection" element={&lt;SectionDetails loading={Loaging} sendSuccesObject={updateObject} /&gt;} /&gt;\n        &lt;Route path="/success-screen" element={&lt;SuccessScreen loading={Loaging} successObject={finalObject} /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/BrowserRouter&gt;\n</FONT>  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Bars_Bottombar_index.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment } from \'react\';\nexport default function Bottombar(props) {\n<A NAME="5"></A><FONT color = #FF0000><A HREF="match2-1.html#5" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div className=\'bottombar\'&gt;\n        &lt;div className=\'bottombar-content\'&gt;\n          &lt;div className=\'bottombar-img-content\'&gt;\n            &lt;img className=\'bottombar-img\' alt={`${props.title} posterURL`} src={props.posterURL}/&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        {(props.weekday === undefined && props.showtime === undefined) ?\n          &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n          :\n          &lt;div&gt;\n            &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n            &lt;p className=\'bottombar-title\'&gt;{`${props.weekday} - ${props.showtime}`}&lt;/p&gt;\n          &lt;/div&gt;\n        }\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Bars_Topbar_index.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment } from "react";\n</FONT><A NAME="7"></A><FONT color = #0000FF><A HREF="match2-1.html#7" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_2.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { useNavigate } from "react-router-dom";\n\nexport default function Topbar() {\n  const navigate = useNavigate();\n\n  function hadleNavigate() {\n    navigate(-1);\n  }\n\n  return(\n    &lt;Fragment&gt;\n      {window.location.pathname !== \'/\' ?\n        &lt;div className="topbar-backpage"&gt;\n          &lt;div className="topbar-backpage-content"&gt;\n            &lt;h1 className="topbar-brand-backpage"&gt;CINEFLEX&lt;/h1&gt;\n\n            &lt;div className=\'icon-topbar\'&gt;\n              &lt;ion-icon onClick={hadleNavigate} name="arrow-undo-circle" /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      :\n        &lt;div className="topbar"&gt;\n</FONT>          &lt;h1 className="topbar-brand"&gt;CINEFLEX&lt;/h1&gt;\n        &lt;/div&gt;\n      }\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_MovieSection_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="2"></A><FONT color = #0000FF><A HREF="match2-1.html#2" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { Link, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\n\nexport default function MovieSection(props) {\n  const { idMovie } = useParams();\n  const [movieSection, setMovieSection] = useState();\n\n  //--------------------PFAZER AS SESSÕES DO FILME-------------------------------------\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/movies/${idMovie}/showtimes`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  }, [idMovie]);\n\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const movieSectionReader = movieSection.days.map((currentMovieWeekday) =&gt; {\n    return (\n      &lt;div className=\'current-movie\' key={currentMovieWeekday.id}&gt;\n        &lt;p className=\'current-movie-weekday\'&gt;\n          { `${currentMovieWeekday.weekday} - ${currentMovieWeekday.date}` }\n        &lt;/p&gt;\n\n        {currentMovieWeekday.showtimes.map((currentMovieShowTimes) =&gt; {\n          return (\n            &lt;Link key={currentMovieShowTimes.id} to={`/section-details/${currentMovieShowTimes.id}`}&gt;\n              &lt;button className=\'current-movie-show-times-button\'&gt;\n                { currentMovieShowTimes.name }\n              &lt;/button&gt;\n            &lt;/Link&gt;\n          );\n        })}\n      &lt;/div&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o horário&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'movie-section-container\'&gt;\n          { movieSectionReader }\n        &lt;/div&gt;\n\n        &lt;Bottombar title={movieSection.title} posterURL={movieSection.posterURL} weekday={undefined} showtime={undefined} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Movies_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from "react";\n</FONT><A NAME="4"></A><FONT color = #FF00FF><A HREF="match2-1.html#4" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_4.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { Link } from "react-router-dom";\nimport Movie from "./movie";\nexport default function Movies(props) {\n  const [movies, setMovies] = useState();\n\n//----------------------------------------------------- OBTER FILME AQUI----------------------------------------\n\n  useEffect(() =&gt; {\n    const promisse = axios.get("https://mock-api.driven.com.br/api/v7/cineflex/movies");\n\n    promisse.then((response) =&gt; {\n      setMovies(response.data);\n    });\n  }, []);\n\n  if(movies === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading}/&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const moviesReader = movies.map((movie) =&gt; {\n    return (\n      &lt;Link key={movie.id} to={`/movie-section/${movie.id}`}&gt;\n        &lt;Movie id={movie.id} posterURL={movie.posterURL} /&gt;\n      &lt;/Link&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o filme&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movies-container"&gt;\n          &lt;div className="movies-content"&gt;\n            { moviesReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Movies_movie.js ------------------- &lt;/filePath&gt; */ \nexport default function Movie(props) {\n</FONT><A NAME="8"></A><FONT color = #00FFFF><A HREF="match2-1.html#8" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_0.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n    return(\n      &lt;div id={props.id} className="movie"&gt;\n        &lt;div className="movie-img-container"&gt;\n</FONT><A NAME="3"></A><FONT color = #00FFFF><A HREF="match2-1.html#3" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_5.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n          &lt;img className="movie-img" alt="filme.png" src={props.posterURL}/&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Sectionsecond_DefaultSeat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useState } from \'react\';\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está mais disponível\');\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n        { props.name }\n</FONT><A NAME="0"></A><FONT color = #FF0000><A HREF="match2-1.html#0" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_58.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n      &lt;/div&gt; \n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Sectionsecond_InfoSeat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useEffect, useState } from "react";\nimport { cpfMask } from \'./mask\'\n\nexport default function InfoSeat(props) {\n  const [name, setName] = useState("");\n  const [cpf, setCpf] = useState("");\n  const [inputCondition, setInputCondition] = useState("");\n  const [confirmButtonCondition, setConfirmButtonCondition] = useState("");\n  const [editButtonCondition, setEditButtonCondition] = useState("disabled-button");\n  const [inputInfo, setInputInfo] = useState({ idAssento: \'\', nome: "", cpf: "" });\n  const [indexBuyer, setIndexBuyer] = useState(null);\n  const [edited, setEdited] = useState(false);\n  const [newNumberSeat, setNewNumberSeat] = useState(props.seatNumberStage);\n\n  useEffect(() =&gt; {\n    setNewNumberSeat(newNumberSeat);\n  }, [newNumberSeat])\n\n  function handleName(e){\n    setName(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      nome: e.target.value\n    });\n  }\n\n  function handleCPF(e){\n    setCpf(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      cpf: cpfMask(e.target.value)\n    });\n  }\n\n  function handleDelete() {\n    if(window.confirm("Você realmente deseja deletar esta reserva?")){\n      props.idSeatSetStage(props.seatNumber);\n      props.seatStage(\n        {\n          ids: props.seatValue.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== props.seatNumber }),\n          compradores: props.seatValue.compradores.filter((comprador) =&gt; { return comprador.idAssento !== props.seatNumber })\n        }\n      );\n    }else{\n      return;\n    }\n  }\n\n  function handleEdit() {\n    if(window.confirm("Você realmente deseja editar esta reserva?")){\n      setInputCondition("");\n      setEditButtonCondition("disabled-button");\n      setConfirmButtonCondition("");\n      for (let i = 0; i &lt; props.seatValue.compradores.length; i++) {\n        const element = props.seatValue.compradores[i].idAssento;\n        if(props.seatNumber === element){\n          setIndexBuyer(i);\n        }\n      }\n  \n      setEdited(true);\n      setInputInfo({ idAssento: props.seatNumber, nome: name, cpf: cpf });\n    }else{\n      return;\n    }\n  }\n\n  function handleConfirm() {\n    if(inputInfo.idAssento === \'\' || inputInfo.nome === \'\' || inputInfo.cpf === \'\'){\n      alert("Você não pode confirmar uma reserva sem antes preencher os dados.");\n      return;\n    }\n\n    if(window.confirm("Você realmente deseja confirmar esta reserva?")){\n      if(edited === false){\n        if(inputInfo.cpf.length &lt; 14){\n          alert("Reveja o campo de CPF, não pode ser menor do que 14 caracteres.");\n          return;\n        }else{\n          if(cpfValidation(inputInfo.cpf)){\n            setInputCondition("disabled-input");\n            setConfirmButtonCondition("disabled-button");\n            setEditButtonCondition("");\n      \n            setInputInfo({ idAssento: \'\', nome: "", cpf: "" });\n            props.seatStage({\n              ids: [ ...props.seatValue.ids ],\n              compradores: [\n                ...props.seatValue.compradores,\n                inputInfo\n              ]\n            });\n          }else{\n            alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n            return;\n          }\n        }\n      }else{\n        if(cpfValidation(inputInfo.cpf)){\n          setInputCondition("disabled-input");\n          setConfirmButtonCondition("disabled-button");\n          setEditButtonCondition("");\n  \n          props.seatStage({\n            ids: [ ...props.seatValue.ids ],\n            compradores: props.seatValue.compradores.map((comprador, index) =&gt; {\n              if(comprador.idAssento === props.seatNumber){\n                return props.seatValue.compradores[indexBuyer] = inputInfo;\n              }else{\n                return props.seatValue.compradores[index];\n              }\n            })\n          });\n        }else{\n          alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n          return;\n        }\n      }\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div className="form-group-container"&gt;\n        &lt;p className="form-group-title"&gt;Assento {newNumberSeat}&lt;/p&gt;\n\n        &lt;FromGroup inputSituation={inputCondition} confirmButtonSituation={confirmButtonCondition}\n          editButtonSituation={editButtonCondition} nameValue={name} nameStage={handleName} cpfValue={cpfMask(cpf)} \n          cpfStage={handleCPF} confirmAction={handleConfirm} editAction={handleEdit} deleteAction={handleDelete}\n        /&gt;\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction FromGroup(props) {\n  return(\n    &lt;Fragment&gt;\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;Nome do comprador:&lt;/label&gt;\n          &lt;input value={props.nameValue} onChange={props.nameStage} type="text" className={`form-control ${props.inputSituation}`} placeholder="Digite seu nome..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;CPF do comprador:&lt;/label&gt;\n          &lt;input value={props.cpfValue} onChange={props.cpfStage} type="text" className={`form-control ${props.inputSituation}`} maxLength="14" placeholder="Digite seu CPF..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group-buttons-container"&gt;\n          &lt;button onClick={props.confirmAction} type="button" className={`form-button-confirm ${props.confirmButtonSituation}`}&gt;\n            Confirmar &lt;ion-icon name="checkmark-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;\n          &lt;button onClick={props.editAction} type="button" className={`form-button-edit ${props.editButtonSituation}`}&gt;\n            Editar &lt;ion-icon name="create-outline"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;   \n          &lt;button onClick={props.deleteAction} type="button" className="form-button-delete"&gt;\n            Deletar &lt;ion-icon name="close-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;  \n        &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction cpfValidation(cpf) {\t\n\tcpf = cpf.replace(/[^\\d]+/g,\'\');\t\n\tif(cpf === \'\') return false;\n\tif (cpf.length !== 11 || \n\t\tcpf === "00000000000" || \n\t\tcpf === "11111111111" || \n\t\tcpf === "22222222222" || \n\t\tcpf === "33333333333" || \n\t\tcpf === "44444444444" || \n\t\tcpf === "55555555555" || \n\t\tcpf === "66666666666" || \n\t\tcpf === "77777777777" || \n\t\tcpf === "88888888888" || \n\t\tcpf === "99999999999")\n\t\t\treturn false;\n\tlet add = 0;\n  let rev;\t\n\tfor (let i = 0; i &lt; 9; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (10 - i);\t\n\t\trev = 11 - (add % 11);\t\n\t\tif (rev === 10 || rev === 11)\t\t\n\t\t\trev = 0;\t\n\t\tif (rev !== parseInt(cpf.charAt(9)))\t\t\n\t\t\treturn false;\t\n\tadd = 0;\t\n\tfor (let i = 0; i &lt; 10; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (11 - i);\t\n\trev = 11 - (add % 11);\t\n\tif (rev === 10 || rev === 11)\t\n\t\trev = 0;\t\n\tif (rev !== parseInt(cpf.charAt(10)))\n\t\treturn false;\t\t\n\treturn true;   \n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Sectionsecond_Seat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useState } from \'react\';\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    props.stageNumberSeat(props.name);\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Você realmente deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está disponível\');\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n    {props.idSeatSetStage !== \'\' ?\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt; \n      :\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt;\n    }\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Sectionsecond_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { useNavigate, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\nimport Seat from \'./Seat\';\nimport InfoSeat from \'./InfoSeat\';\nimport DefaultSeat from \'./DefaultSeat\';\n\nexport default function SectionDetails(props) {\n  const { idSection } = useParams();\n  const navigate = useNavigate();\n  const [sectionDetais, setSectionDetais] = useState();\n  const [reserveSeats, setReserveSeats] = useState({ids: [], compradores: []});\n  const [buttonOpacity, setButtonOpacity] = useState(\'\');\n  const [idSeatInfo, setIdSeatInfo] = useState(0);\n  const [seatNumberName, setSeatNumberName] = useState(0);\n  \n  //-----------------------SEATS PARA SESSÃO---------------------------------------------------\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/showtimes/${idSection}/seats`);\n  \n    promisse.then((response) =&gt; {\n      setSectionDetais(response.data);\n    });\n  }, [idSection]);\n\n  useEffect(() =&gt; {\n    if(reserveSeats.ids.length === 0){\n      setButtonOpacity(\'opacity-button\');\n    }else{\n      setButtonOpacity(\'\');\n    }\n  }, [reserveSeats.ids]);\n\n  useEffect(() =&gt; {\n    if(idSeatInfo !== 0){\n      setIdSeatInfo(0);\n    }\n  }, [idSeatInfo]);\n\n  if(sectionDetais === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  function handleSeat(idSeat, addArray){\n    if(addArray === undefined){\n      return;\n    }\n\n    if(addArray){\n      setReserveSeats(\n        { ids: [ ...reserveSeats.ids, idSeat ], \n          compradores: [ ...reserveSeats.compradores ]\n        }\n      );\n    }else{\n      const objectReader = reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento === idSeat; });\n\n      if(objectReader.length === 1){\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }else{\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }\n    }\n  }\n\n  function numberSeatValidation(currentSeat) {\n    if(currentSeat &lt; 10){\n      let newCurrentSeat = "0" + currentSeat\n      return newCurrentSeat;\n    }else{\n      return currentSeat;\n    }\n  }\n\n  const sectionDetaisReader = sectionDetais.seats.map((currentSeat) =&gt; {\n    return (\n      &lt;Fragment key={currentSeat.id}&gt;\n        {currentSeat.isAvailable ?\n          idSeatInfo === currentSeat.id ?\n            &lt;DefaultSeat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)}\n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              idSeatSetStage={setIdSeatInfo}\n            /&gt;\n          :\n            &lt;Seat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)} \n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              stageNumberSeat={setSeatNumberName}\n            /&gt;\n        :\n          &lt;Seat classSeat=\'current-seat-unavailable\' name={numberSeatValidation(currentSeat.name)}\n            stageNumberSeat={setSeatNumberName}\n          /&gt;\n        }\n      &lt;/Fragment&gt;\n    );\n  });\n\n  const reserveSeatsReader = reserveSeats.ids.map((reserveSeat) =&gt; {\n    return(\n      &lt;Fragment key={reserveSeat}&gt;\n        &lt;InfoSeat seatNumber={reserveSeat} seatNumberStage={seatNumberName} \n          stageNumberSeat={setSeatNumberName} seatValue={reserveSeats} \n          seatStage={setReserveSeats} idSeatSetStage={setIdSeatInfo}\n        /&gt;\n      &lt;/Fragment&gt;\n    );\n  });\n///USAR BOOK MANY PARA ASSENTOS\n  function sendObject() {\n    if(reserveSeats.ids.length !== 0 || reserveSeats.compradores.length !== 0){\n      if(window.confirm("Você confirma todas as seleções feitas?")){\n        if(reserveSeats.ids.length === reserveSeats.compradores.length){\n          props.sendSuccesObject(reserveSeats, idSection, \'\');\n          const promisse = axios.post(`https://mock-api.driven.com.br/api/v7/cineflex/seats/book-many`, reserveSeats); //BOOK-MANY PARA ASSENTOS\n          promisse.then(() =&gt; navigate(\'/success-screen\'));\n          promisse.catch(() =&gt; window.location.reload(true));\n        }else{\n          alert(`Ohe os campos dos assentos selecionados, existem alguns assentos que estão vazios, ou que não foram confirmados.`);\n          return;\n        }\n      }\n    }else{\n      alert("selecione os assentos desejados para continuar.");\n      return;\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o(s) assento(s)&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-container\'&gt;\n          &lt;div className=\'seats-content\'&gt;\n            { sectionDetaisReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-subtitle-container\'&gt;\n          &lt;div className=\'seats-subtitle-content\'&gt;\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-selected\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Selecionado&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-available\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Disponível&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-unavailable\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Indisponível&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;form className=\'form\'&gt;\n          { reserveSeats.ids.length === 0 ?\n            &lt;p className=\'form-info\'&gt;Pselecione os assentos desejados.&lt;/p&gt;\n            :\n            &lt;Fragment&gt;\n              {reserveSeatsReader}\n            &lt;/Fragment&gt;\n          }\n\n          &lt;button onClick={() =&gt; sendObject()} type="button" className={`form-button ${buttonOpacity}`}&gt;Reservar assento(s)&lt;/button&gt;\n        &lt;/form&gt;\n\n        &lt;Bottombar title={sectionDetais.movie.title} posterURL={sectionDetais.movie.posterURL} weekday={sectionDetais.day.weekday} showtime={sectionDetais.name} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Sectionsecond_mask.js ------------------- &lt;/filePath&gt; */ \nexport const cpfMask = value =&gt; {\n    return value\n      .replace(/\\D/g, \'\') \n      .replace(/(\\d{3})(\\d)/, \'$1.$2\') \n      .replace(/(\\d{3})(\\d)/, \'$1.$2\')\n      .replace(/(\\d{3})(\\d{1,2})/, \'$1-$2\')\n      .replace(/(-\\d{2})\\d+?$/, \'$1\') \n</FONT>  }\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_components_Success_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="1"></A><FONT color = #00FF00><A HREF="match2-1.html#1" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useState, useEffect } from \'react\';\nimport { Link } from \'react-router-dom\';\n\nexport default function SuccessScreen(props) {\n  const [movieSection, setMovieSection] = useState();\n\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/showtimes/${props.successObject.sectionID}/seats`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  },[props.successObject.sectionID]);\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title-success"&gt;\n            Pedido feito\n            &lt;br /&gt;\n            com sucesso!\n          &lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movie-section-flex"&gt;\n          &lt;div className="movie-section-content"&gt;\n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Filme e sessão&lt;/p&gt;\n              &lt;div className="movie-section-container-subtitle"&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.movie.title}&lt;/p&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.day.date} {movieSection.name}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Ingressos&lt;/p&gt;\n              {props.successObject.ids.map((id) =&gt; {\n                return(\n                  &lt;p className="movie-section-subtitle" key={id}&gt;Assento {id}&lt;/p&gt;\n                );\n              })}\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Compradores&lt;/p&gt;\n\n              {props.successObject.compradores.map((comprador,index) =&gt; {\n                return(\n                  &lt;Fragment key={comprador.idAssento}&gt;\n                    &lt;div className="movie-section-div"&gt;\n                      &lt;p className="movie-section-subtitle-seat"&gt;Assento {comprador.idAssento}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;Nome: {comprador.nome}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;CPF: {comprador.cpf}&lt;/p&gt;\n                    &lt;/div&gt;\n                  &lt;/Fragment&gt;\n                );\n              })}\n            &lt;/div&gt;\n          &lt;/div&gt;\n\n          &lt;Link to=\'/\'&gt;\n            &lt;div className=\'movie-section-button-container\'&gt;\n              &lt;button className="movie-section-button"&gt;Voltar pra Home&lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/Link&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex-react_src_index.js ------------------- &lt;/filePath&gt; */ \nimport ReactDOM from "react-dom";\n</FONT>import App from "./App.js";\nconst app = &lt;App /&gt;;\nconst root = document.querySelector(".root");\nReactDOM.render(app, root);</PRE>\n</PRE>\n</BODY>\n</HTML>\n',
          '<HTML>\n<HEAD>\n<TITLE>./repositories/CineFlex_-_Front/ISABELLY_DA_COSTA_WILHELM/</TITLE>\n</HEAD>\n<BODY BGCOLOR=white>\n<HR>\n./students-front5680285040502497/IsabellyWilhelm/<p><PRE>\n&gt;&gt;&gt;&gt; file: main.js\n\n /* &lt;filePath&gt; ------------------- Arquivo: src_App.js ------------------- &lt;/filePath&gt; */ \n<A NAME="6"></A><FONT color = #00FF00><A HREF="match2-0.html#6" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { BrowserRouter, Routes, Route } from "react-router-dom";\nimport { useState } from \'react\';\nimport Topbar from "./components/Bars/Topbar";\nimport Movies from "./components/Movies";\nimport MovieSection from "./components/MovieSection";\nimport SectionDetails from "./components/Sectionsecond";\nimport SuccessScreen from "./components/Success";\nimport Loaging from "./assets/img/loading.png";\nimport "./css/reset.css";\nimport "./css/style.css";\n\nexport default function App() {\n  const [finalObject, setFinalObject] = useState({});\n\n  function updateObject(currentObject, sectionID, object) {\n    setFinalObject(object = { ...currentObject, sectionID });\n  }\n\n  return(\n    &lt;BrowserRouter&gt;\n      &lt;Topbar /&gt;\n      &lt;Routes&gt;\n        &lt;Route path="/" element={&lt;Movies loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/movie-section/:idMovie" element={&lt;MovieSection loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/section-details/:idSection" element={&lt;SectionDetails loading={Loaging} sendSuccesObject={updateObject} /&gt;} /&gt;\n        &lt;Route path="/success-screen" element={&lt;SuccessScreen loading={Loaging} successObject={finalObject} /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/BrowserRouter&gt;\n</FONT>  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: src_index.js ------------------- &lt;/filePath&gt; */ \nimport ReactDOM from "react-dom";\nimport App from "./App.js";\nconst app = &lt;App /&gt;;\nconst root = document.querySelector(".root");\nReactDOM.render(app, root);\n /* &lt;filePath&gt; ------------------- Arquivo: MovieSection_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="2"></A><FONT color = #0000FF><A HREF="match2-0.html#2" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { Link, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\n\nexport default function MovieSection(props) {\n  const { idMovie } = useParams();\n  const [movieSection, setMovieSection] = useState();\n\n  //--------------------PFAZER AS SESSÕES DO FILME-------------------------------------\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/movies/${idMovie}/showtimes`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  }, [idMovie]);\n\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const movieSectionReader = movieSection.days.map((currentMovieWeekday) =&gt; {\n    return (\n      &lt;div className=\'current-movie\' key={currentMovieWeekday.id}&gt;\n        &lt;p className=\'current-movie-weekday\'&gt;\n          { `${currentMovieWeekday.weekday} - ${currentMovieWeekday.date}` }\n        &lt;/p&gt;\n\n        {currentMovieWeekday.showtimes.map((currentMovieShowTimes) =&gt; {\n          return (\n            &lt;Link key={currentMovieShowTimes.id} to={`/section-details/${currentMovieShowTimes.id}`}&gt;\n              &lt;button className=\'current-movie-show-times-button\'&gt;\n                { currentMovieShowTimes.name }\n              &lt;/button&gt;\n            &lt;/Link&gt;\n          );\n        })}\n      &lt;/div&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o horário&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'movie-section-container\'&gt;\n          { movieSectionReader }\n        &lt;/div&gt;\n\n        &lt;Bottombar title={movieSection.title} posterURL={movieSection.posterURL} weekday={undefined} showtime={undefined} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Bottombar_index.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment } from \'react\';\nexport default function Bottombar(props) {\n</FONT><A NAME="5"></A><FONT color = #FF0000><A HREF="match2-0.html#5" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div className=\'bottombar\'&gt;\n        &lt;div className=\'bottombar-content\'&gt;\n          &lt;div className=\'bottombar-img-content\'&gt;\n            &lt;img className=\'bottombar-img\' alt={`${props.title} posterURL`} src={props.posterURL}/&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        {(props.weekday === undefined && props.showtime === undefined) ?\n          &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n          :\n          &lt;div&gt;\n            &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n            &lt;p className=\'bottombar-title\'&gt;{`${props.weekday} - ${props.showtime}`}&lt;/p&gt;\n          &lt;/div&gt;\n        }\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Movies_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\n</FONT><A NAME="4"></A><FONT color = #FF00FF><A HREF="match2-0.html#4" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_4.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { Fragment, useEffect, useState } from "react";\nimport { Link } from "react-router-dom";\nimport Movie from "./movie";\nexport default function Movies(props) {\n  const [movies, setMovies] = useState();\n\n//----------------------------------------------------- OBTER FILME AQUI----------------------------------------\n\n  useEffect(() =&gt; {\n    const promisse = axios.get("https://mock-api.driven.com.br/api/v7/cineflex/movies");\n\n    promisse.then((response) =&gt; {\n      setMovies(response.data);\n    });\n  }, []);\n\n  if(movies === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading}/&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const moviesReader = movies.map((movie) =&gt; {\n    return (\n      &lt;Link key={movie.id} to={`/movie-section/${movie.id}`}&gt;\n        &lt;Movie id={movie.id} posterURL={movie.posterURL} /&gt;\n      &lt;/Link&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o filme&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movies-container"&gt;\n          &lt;div className="movies-content"&gt;\n            { moviesReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Topbar_index.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment } from "react";\n</FONT><A NAME="7"></A><FONT color = #0000FF><A HREF="match2-0.html#7" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_2.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { useNavigate } from "react-router-dom";\n\nexport default function Topbar() {\n  const navigate = useNavigate();\n\n  function hadleNavigate() {\n    navigate(-1);\n  }\n\n  return(\n    &lt;Fragment&gt;\n      {window.location.pathname !== \'/\' ?\n        &lt;div className="topbar-backpage"&gt;\n          &lt;div className="topbar-backpage-content"&gt;\n            &lt;h1 className="topbar-brand-backpage"&gt;CINEFLEX&lt;/h1&gt;\n\n            &lt;div className=\'icon-topbar\'&gt;\n              &lt;ion-icon onClick={hadleNavigate} name="arrow-undo-circle" /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      :\n        &lt;div className="topbar"&gt;\n</FONT><A NAME="3"></A><FONT color = #00FFFF><A HREF="match2-0.html#3" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_5.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n          &lt;h1 className="topbar-brand"&gt;CINEFLEX&lt;/h1&gt;\n        &lt;/div&gt;\n      }\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_DefaultSeat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useState } from \'react\';\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está mais disponível\');\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n        { props.name }\n</FONT>      &lt;/div&gt; \n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Success_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="1"></A><FONT color = #00FF00><A HREF="match2-0.html#1" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useState, useEffect } from \'react\';\nimport { Link } from \'react-router-dom\';\n\nexport default function SuccessScreen(props) {\n  const [movieSection, setMovieSection] = useState();\n\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/showtimes/${props.successObject.sectionID}/seats`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  },[props.successObject.sectionID]);\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title-success"&gt;\n            Pedido feito\n            &lt;br /&gt;\n            com sucesso!\n          &lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movie-section-flex"&gt;\n          &lt;div className="movie-section-content"&gt;\n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Filme e sessão&lt;/p&gt;\n              &lt;div className="movie-section-container-subtitle"&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.movie.title}&lt;/p&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.day.date} {movieSection.name}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Ingressos&lt;/p&gt;\n              {props.successObject.ids.map((id) =&gt; {\n                return(\n                  &lt;p className="movie-section-subtitle" key={id}&gt;Assento {id}&lt;/p&gt;\n                );\n              })}\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Compradores&lt;/p&gt;\n\n              {props.successObject.compradores.map((comprador,index) =&gt; {\n                return(\n                  &lt;Fragment key={comprador.idAssento}&gt;\n                    &lt;div className="movie-section-div"&gt;\n                      &lt;p className="movie-section-subtitle-seat"&gt;Assento {comprador.idAssento}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;Nome: {comprador.nome}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;CPF: {comprador.cpf}&lt;/p&gt;\n                    &lt;/div&gt;\n                  &lt;/Fragment&gt;\n                );\n              })}\n            &lt;/div&gt;\n          &lt;/div&gt;\n\n          &lt;Link to=\'/\'&gt;\n            &lt;div className=\'movie-section-button-container\'&gt;\n              &lt;button className="movie-section-button"&gt;Voltar pra Home&lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/Link&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Movies_movie.js ------------------- &lt;/filePath&gt; */ \nexport default function Movie(props) {\n</FONT><A NAME="8"></A><FONT color = #00FFFF><A HREF="match2-0.html#8" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_0.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n    return(\n      &lt;div id={props.id} className="movie"&gt;\n        &lt;div className="movie-img-container"&gt;\n</FONT>          &lt;img className="movie-img" alt="filme.png" src={props.posterURL}/&gt;\n<A NAME="0"></A><FONT color = #FF0000><A HREF="match2-0.html#0" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_58.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_InfoSeat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useEffect, useState } from "react";\nimport { cpfMask } from \'./mask\'\n\nexport default function InfoSeat(props) {\n  const [name, setName] = useState("");\n  const [cpf, setCpf] = useState("");\n  const [inputCondition, setInputCondition] = useState("");\n  const [confirmButtonCondition, setConfirmButtonCondition] = useState("");\n  const [editButtonCondition, setEditButtonCondition] = useState("disabled-button");\n  const [inputInfo, setInputInfo] = useState({ idAssento: \'\', nome: "", cpf: "" });\n  const [indexBuyer, setIndexBuyer] = useState(null);\n  const [edited, setEdited] = useState(false);\n  const [newNumberSeat, setNewNumberSeat] = useState(props.seatNumberStage);\n\n  useEffect(() =&gt; {\n    setNewNumberSeat(newNumberSeat);\n  }, [newNumberSeat])\n\n  function handleName(e){\n    setName(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      nome: e.target.value\n    });\n  }\n\n  function handleCPF(e){\n    setCpf(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      cpf: cpfMask(e.target.value)\n    });\n  }\n\n  function handleDelete() {\n    if(window.confirm("Você realmente deseja deletar esta reserva?")){\n      props.idSeatSetStage(props.seatNumber);\n      props.seatStage(\n        {\n          ids: props.seatValue.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== props.seatNumber }),\n          compradores: props.seatValue.compradores.filter((comprador) =&gt; { return comprador.idAssento !== props.seatNumber })\n        }\n      );\n    }else{\n      return;\n    }\n  }\n\n  function handleEdit() {\n    if(window.confirm("Você realmente deseja editar esta reserva?")){\n      setInputCondition("");\n      setEditButtonCondition("disabled-button");\n      setConfirmButtonCondition("");\n      for (let i = 0; i &lt; props.seatValue.compradores.length; i++) {\n        const element = props.seatValue.compradores[i].idAssento;\n        if(props.seatNumber === element){\n          setIndexBuyer(i);\n        }\n      }\n  \n      setEdited(true);\n      setInputInfo({ idAssento: props.seatNumber, nome: name, cpf: cpf });\n    }else{\n      return;\n    }\n  }\n\n  function handleConfirm() {\n    if(inputInfo.idAssento === \'\' || inputInfo.nome === \'\' || inputInfo.cpf === \'\'){\n      alert("Você não pode confirmar uma reserva sem antes preencher os dados.");\n      return;\n    }\n\n    if(window.confirm("Você realmente deseja confirmar esta reserva?")){\n      if(edited === false){\n        if(inputInfo.cpf.length &lt; 14){\n          alert("Reveja o campo de CPF, não pode ser menor do que 14 caracteres.");\n          return;\n        }else{\n          if(cpfValidation(inputInfo.cpf)){\n            setInputCondition("disabled-input");\n            setConfirmButtonCondition("disabled-button");\n            setEditButtonCondition("");\n      \n            setInputInfo({ idAssento: \'\', nome: "", cpf: "" });\n            props.seatStage({\n              ids: [ ...props.seatValue.ids ],\n              compradores: [\n                ...props.seatValue.compradores,\n                inputInfo\n              ]\n            });\n          }else{\n            alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n            return;\n          }\n        }\n      }else{\n        if(cpfValidation(inputInfo.cpf)){\n          setInputCondition("disabled-input");\n          setConfirmButtonCondition("disabled-button");\n          setEditButtonCondition("");\n  \n          props.seatStage({\n            ids: [ ...props.seatValue.ids ],\n            compradores: props.seatValue.compradores.map((comprador, index) =&gt; {\n              if(comprador.idAssento === props.seatNumber){\n                return props.seatValue.compradores[indexBuyer] = inputInfo;\n              }else{\n                return props.seatValue.compradores[index];\n              }\n            })\n          });\n        }else{\n          alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n          return;\n        }\n      }\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div className="form-group-container"&gt;\n        &lt;p className="form-group-title"&gt;Assento {newNumberSeat}&lt;/p&gt;\n\n        &lt;FromGroup inputSituation={inputCondition} confirmButtonSituation={confirmButtonCondition}\n          editButtonSituation={editButtonCondition} nameValue={name} nameStage={handleName} cpfValue={cpfMask(cpf)} \n          cpfStage={handleCPF} confirmAction={handleConfirm} editAction={handleEdit} deleteAction={handleDelete}\n        /&gt;\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction FromGroup(props) {\n  return(\n    &lt;Fragment&gt;\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;Nome do comprador:&lt;/label&gt;\n          &lt;input value={props.nameValue} onChange={props.nameStage} type="text" className={`form-control ${props.inputSituation}`} placeholder="Digite seu nome..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;CPF do comprador:&lt;/label&gt;\n          &lt;input value={props.cpfValue} onChange={props.cpfStage} type="text" className={`form-control ${props.inputSituation}`} maxLength="14" placeholder="Digite seu CPF..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group-buttons-container"&gt;\n          &lt;button onClick={props.confirmAction} type="button" className={`form-button-confirm ${props.confirmButtonSituation}`}&gt;\n            Confirmar &lt;ion-icon name="checkmark-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;\n          &lt;button onClick={props.editAction} type="button" className={`form-button-edit ${props.editButtonSituation}`}&gt;\n            Editar &lt;ion-icon name="create-outline"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;   \n          &lt;button onClick={props.deleteAction} type="button" className="form-button-delete"&gt;\n            Deletar &lt;ion-icon name="close-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;  \n        &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction cpfValidation(cpf) {\t\n\tcpf = cpf.replace(/[^\\d]+/g,\'\');\t\n\tif(cpf === \'\') return false;\n\tif (cpf.length !== 11 || \n\t\tcpf === "00000000000" || \n\t\tcpf === "11111111111" || \n\t\tcpf === "22222222222" || \n\t\tcpf === "33333333333" || \n\t\tcpf === "44444444444" || \n\t\tcpf === "55555555555" || \n\t\tcpf === "66666666666" || \n\t\tcpf === "77777777777" || \n\t\tcpf === "88888888888" || \n\t\tcpf === "99999999999")\n\t\t\treturn false;\n\tlet add = 0;\n  let rev;\t\n\tfor (let i = 0; i &lt; 9; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (10 - i);\t\n\t\trev = 11 - (add % 11);\t\n\t\tif (rev === 10 || rev === 11)\t\t\n\t\t\trev = 0;\t\n\t\tif (rev !== parseInt(cpf.charAt(9)))\t\t\n\t\t\treturn false;\t\n\tadd = 0;\t\n\tfor (let i = 0; i &lt; 10; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (11 - i);\t\n\trev = 11 - (add % 11);\t\n\tif (rev === 10 || rev === 11)\t\n\t\trev = 0;\t\n\tif (rev !== parseInt(cpf.charAt(10)))\n\t\treturn false;\t\t\n\treturn true;   \n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_Seat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useState } from \'react\';\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    props.stageNumberSeat(props.name);\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Você realmente deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está disponível\');\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n    {props.idSeatSetStage !== \'\' ?\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt; \n      :\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt;\n    }\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { useNavigate, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\nimport Seat from \'./Seat\';\nimport InfoSeat from \'./InfoSeat\';\nimport DefaultSeat from \'./DefaultSeat\';\n\nexport default function SectionDetails(props) {\n  const { idSection } = useParams();\n  const navigate = useNavigate();\n  const [sectionDetais, setSectionDetais] = useState();\n  const [reserveSeats, setReserveSeats] = useState({ids: [], compradores: []});\n  const [buttonOpacity, setButtonOpacity] = useState(\'\');\n  const [idSeatInfo, setIdSeatInfo] = useState(0);\n  const [seatNumberName, setSeatNumberName] = useState(0);\n  \n  //-----------------------SEATS PARA SESSÃO---------------------------------------------------\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/showtimes/${idSection}/seats`);\n  \n    promisse.then((response) =&gt; {\n      setSectionDetais(response.data);\n    });\n  }, [idSection]);\n\n  useEffect(() =&gt; {\n    if(reserveSeats.ids.length === 0){\n      setButtonOpacity(\'opacity-button\');\n    }else{\n      setButtonOpacity(\'\');\n    }\n  }, [reserveSeats.ids]);\n\n  useEffect(() =&gt; {\n    if(idSeatInfo !== 0){\n      setIdSeatInfo(0);\n    }\n  }, [idSeatInfo]);\n\n  if(sectionDetais === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  function handleSeat(idSeat, addArray){\n    if(addArray === undefined){\n      return;\n    }\n\n    if(addArray){\n      setReserveSeats(\n        { ids: [ ...reserveSeats.ids, idSeat ], \n          compradores: [ ...reserveSeats.compradores ]\n        }\n      );\n    }else{\n      const objectReader = reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento === idSeat; });\n\n      if(objectReader.length === 1){\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }else{\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }\n    }\n  }\n\n  function numberSeatValidation(currentSeat) {\n    if(currentSeat &lt; 10){\n      let newCurrentSeat = "0" + currentSeat\n      return newCurrentSeat;\n    }else{\n      return currentSeat;\n    }\n  }\n\n  const sectionDetaisReader = sectionDetais.seats.map((currentSeat) =&gt; {\n    return (\n      &lt;Fragment key={currentSeat.id}&gt;\n        {currentSeat.isAvailable ?\n          idSeatInfo === currentSeat.id ?\n            &lt;DefaultSeat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)}\n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              idSeatSetStage={setIdSeatInfo}\n            /&gt;\n          :\n            &lt;Seat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)} \n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              stageNumberSeat={setSeatNumberName}\n            /&gt;\n        :\n          &lt;Seat classSeat=\'current-seat-unavailable\' name={numberSeatValidation(currentSeat.name)}\n            stageNumberSeat={setSeatNumberName}\n          /&gt;\n        }\n      &lt;/Fragment&gt;\n    );\n  });\n\n  const reserveSeatsReader = reserveSeats.ids.map((reserveSeat) =&gt; {\n    return(\n      &lt;Fragment key={reserveSeat}&gt;\n        &lt;InfoSeat seatNumber={reserveSeat} seatNumberStage={seatNumberName} \n          stageNumberSeat={setSeatNumberName} seatValue={reserveSeats} \n          seatStage={setReserveSeats} idSeatSetStage={setIdSeatInfo}\n        /&gt;\n      &lt;/Fragment&gt;\n    );\n  });\n///USAR BOOK MANY PARA ASSENTOS\n  function sendObject() {\n    if(reserveSeats.ids.length !== 0 || reserveSeats.compradores.length !== 0){\n      if(window.confirm("Você confirma todas as seleções feitas?")){\n        if(reserveSeats.ids.length === reserveSeats.compradores.length){\n          props.sendSuccesObject(reserveSeats, idSection, \'\');\n          const promisse = axios.post(`https://mock-api.driven.com.br/api/v7/cineflex/seats/book-many`, reserveSeats); //BOOK-MANY PARA ASSENTOS\n          promisse.then(() =&gt; navigate(\'/success-screen\'));\n          promisse.catch(() =&gt; window.location.reload(true));\n        }else{\n          alert(`Ohe os campos dos assentos selecionados, existem alguns assentos que estão vazios, ou que não foram confirmados.`);\n          return;\n        }\n      }\n    }else{\n      alert("selecione os assentos desejados para continuar.");\n      return;\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o(s) assento(s)&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-container\'&gt;\n          &lt;div className=\'seats-content\'&gt;\n            { sectionDetaisReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-subtitle-container\'&gt;\n          &lt;div className=\'seats-subtitle-content\'&gt;\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-selected\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Selecionado&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-available\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Disponível&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-unavailable\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Indisponível&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;form className=\'form\'&gt;\n          { reserveSeats.ids.length === 0 ?\n            &lt;p className=\'form-info\'&gt;Pselecione os assentos desejados.&lt;/p&gt;\n            :\n            &lt;Fragment&gt;\n              {reserveSeatsReader}\n            &lt;/Fragment&gt;\n          }\n\n          &lt;button onClick={() =&gt; sendObject()} type="button" className={`form-button ${buttonOpacity}`}&gt;Reservar assento(s)&lt;/button&gt;\n        &lt;/form&gt;\n\n        &lt;Bottombar title={sectionDetais.movie.title} posterURL={sectionDetais.movie.posterURL} weekday={sectionDetais.day.weekday} showtime={sectionDetais.name} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_mask.js ------------------- &lt;/filePath&gt; */ \nexport const cpfMask = value =&gt; {\n    return value\n      .replace(/\\D/g, \'\') \n      .replace(/(\\d{3})(\\d)/, \'$1.$2\') \n      .replace(/(\\d{3})(\\d)/, \'$1.$2\')\n      .replace(/(\\d{3})(\\d{1,2})/, \'$1-$2\')\n      .replace(/(-\\d{2})\\d+?$/, \'$1\') \n</FONT>  }</PRE>\n</PRE>\n</BODY>\n</HTML>\n',
        ],
      },
    },
    {
      value: {
        studentNameOne: "RUI DE ALBUQUERQUE LOPES NETO",
        studentNameTwo: "IsabellyWilhelm",
        table:
          '<HTML>\n<HEAD>\n<TITLE>Top</TITLE>\n</HEAD><BODY BGCOLOR=white><CENTER><TABLE BORDER="1" CELLSPACING="0" BGCOLOR="#d0d0d0"><TR><TH>./repositories/CineFlex_-_Front/RUI_DE_ALBUQUERQUE_LOPES_NETO/ (97%)<TH><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_97.gif" BORDER="0" ALIGN=left><TH>./students-front5680285040502497/IsabellyWilhelm/ (97%)<TH><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_97.gif" BORDER="0" ALIGN=left><TH>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#0" NAME="0" TARGET="0">255-646</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#0" NAME="0" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_46.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#0" NAME="0" TARGET="1">344-730</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#0" NAME="0" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_46.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#1" NAME="1" TARGET="0">715-798</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#1" NAME="1" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#1" NAME="1" TARGET="1">256-339</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#1" NAME="1" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#2" NAME="2" TARGET="0">92-157</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#2" NAME="2" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#2" NAME="2" TARGET="1">41-107</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#2" NAME="2" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#3" NAME="3" TARGET="0">646-690</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#3" NAME="3" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_7.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#3" NAME="3" TARGET="1">730-774</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#3" NAME="3" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_7.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#4" NAME="4" TARGET="0">161-218</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#4" NAME="4" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_5.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#4" NAME="4" TARGET="1">124-183</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#4" NAME="4" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_5.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#5" NAME="5" TARGET="0">690-712</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#5" NAME="5" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_4.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#5" NAME="5" TARGET="1">774-796</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#5" NAME="5" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_4.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#6" NAME="6" TARGET="0">219-247</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#6" NAME="6" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#6" NAME="6" TARGET="1">214-243</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#6" NAME="6" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#7" NAME="7" TARGET="0">4-32</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#7" NAME="7" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#7" NAME="7" TARGET="1">4-31</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#7" NAME="7" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#8" NAME="8" TARGET="0">37-53</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#8" NAME="8" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#8" NAME="8" TARGET="1">108-123</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#8" NAME="8" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_3.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#9" NAME="9" TARGET="0">61-88</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#9" NAME="9" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_2.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#9" NAME="9" TARGET="1">184-210</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#9" NAME="9" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_2.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TR><TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#10" NAME="10" TARGET="0">158-160</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-0.html#10" NAME="10" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_0.gif" ALT="link" BORDER="0" ALIGN=left></A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#10" NAME="10" TARGET="1">340-342</A>\n<TD><A HREF="http://moss.stanford.edu/results/4/7242332679192/match3-1.html#10" NAME="10" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_0.gif" ALT="link" BORDER="0" ALIGN=left></A>\n</TABLE></CENTER></BODY></BODY></HTML>',
        columns: [
          '<HTML>\n<HEAD>\n<TITLE>./repositories/CineFlex_-_Front/RUI_DE_ALBUQUERQUE_LOPES_NETO/</TITLE>\n</HEAD>\n<BODY BGCOLOR=white>\n<HR>\n./repositories/CineFlex_-_Front/RUI_DE_ALBUQUERQUE_LOPES_NETO/<p><PRE>\n&gt;&gt;&gt;&gt; file: main.js\n\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_App.js ------------------- &lt;/filePath&gt; */ \n<A NAME="7"></A><FONT color = #0000FF><A HREF="match3-1.html#7" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { BrowserRouter, Routes, Route } from "react-router-dom";\nimport { useState } from \'react\';\nimport Topbar from "./components/Bars/Topbar";\nimport Movies from "./components/Movies";\nimport MovieSection from "./components/MovieSection";\nimport SectionDetails from "./components/SectionDetails";\nimport SuccessScreen from "./components/SuccessScreen";\nimport Loaging from "./assets/img/loading.png";\nimport "./css/reset.css";\nimport "./css/style.css";\n\nexport default function App() {\n  const [finalObject, setFinalObject] = useState({});\n\n  function updateObject(currentObject, sectionID, object) {\n    setFinalObject(object = { ...currentObject, sectionID });\n  }\n\n  return(\n    &lt;BrowserRouter&gt;\n      &lt;Topbar /&gt;\n\n      &lt;Routes&gt;\n        &lt;Route path="/" element={&lt;Movies loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/movie-section/:idMovie" element={&lt;MovieSection loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/section-details/:idSection" element={&lt;SectionDetails loading={Loaging} sendSuccesObject={updateObject} /&gt;} /&gt;\n        &lt;Route path="/success-screen" element={&lt;SuccessScreen loading={Loaging} successObject={finalObject} /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/BrowserRouter&gt;\n</FONT>  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_Bars_Bottombar_index.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment } from \'react\';\n<A NAME="8"></A><FONT color = #00FFFF><A HREF="match3-1.html#8" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n\nexport default function Bottombar(props) {\n  return(\n    &lt;Fragment&gt;\n      &lt;div className=\'bottombar\'&gt;\n        &lt;div className=\'bottombar-content\'&gt;\n          &lt;div className=\'bottombar-img-content\'&gt;\n            &lt;img className=\'bottombar-img\' alt={`${props.title} posterURL`} src={props.posterURL}/&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        {(props.weekday === undefined && props.showtime === undefined) ?\n          &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n          :\n          &lt;div&gt;\n            &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n            &lt;p className=\'bottombar-title\'&gt;{`${props.weekday} - ${props.showtime}`}&lt;/p&gt;\n</FONT>          &lt;/div&gt;\n        }\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_Bars_Topbar_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="9"></A><FONT color = #FF00FF><A HREF="match3-1.html#9" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_2.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { Fragment } from "react";\nimport { useNavigate } from "react-router-dom";\n\nexport default function Topbar() {\n  const navigate = useNavigate();\n\n  function hadleNavigate() {\n    navigate(-1);\n  }\n\n  return(\n    &lt;Fragment&gt;\n      {window.location.pathname !== \'/\' ?\n        &lt;div className="topbar-backpage"&gt;\n          &lt;div className="topbar-backpage-content"&gt;\n            &lt;h1 className="topbar-brand-backpage"&gt;CINEFLEX&lt;/h1&gt;\n\n            &lt;div className=\'icon-topbar\'&gt;\n              &lt;ion-icon onClick={hadleNavigate} name="arrow-undo-circle" /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      :\n        &lt;div className="topbar"&gt;\n          &lt;h1 className="topbar-brand"&gt;CINEFLEX&lt;/h1&gt;\n        &lt;/div&gt;\n      }\n    &lt;/Fragment&gt;\n</FONT>  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_MovieSection_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="2"></A><FONT color = #0000FF><A HREF="match3-1.html#2" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { Link, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\n\nexport default function MovieSection(props) {\n  const { idMovie } = useParams();\n  const [movieSection, setMovieSection] = useState();\n\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/movies/${idMovie}/showtimes`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  }, [idMovie]);\n\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const movieSectionReader = movieSection.days.map((currentMovieWeekday) =&gt; {\n    return (\n      &lt;div className=\'current-movie\' key={currentMovieWeekday.id}&gt;\n        &lt;p className=\'current-movie-weekday\'&gt;\n          { `${currentMovieWeekday.weekday} - ${currentMovieWeekday.date}` }\n        &lt;/p&gt;\n\n        {currentMovieWeekday.showtimes.map((currentMovieShowTimes) =&gt; {\n          return (\n            &lt;Link key={currentMovieShowTimes.id} to={`/section-details/${currentMovieShowTimes.id}`}&gt;\n              &lt;button className=\'current-movie-show-times-button\'&gt;\n                { currentMovieShowTimes.name }\n              &lt;/button&gt;\n            &lt;/Link&gt;\n          );\n        })}\n      &lt;/div&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o horário&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'movie-section-container\'&gt;\n          { movieSectionReader }\n        &lt;/div&gt;\n\n        &lt;Bottombar title={movieSection.title} posterURL={movieSection.posterURL} weekday={undefined} showtime={undefined} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_Movies_Movie.js ------------------- &lt;/filePath&gt; */ \nexport default function Movie(props) {\n</FONT><A NAME="10"></A><FONT color = #FF0000><A HREF="match3-1.html#10" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_0.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n  return(\n    &lt;div id={props.id} className="movie"&gt;\n      &lt;div className="movie-img-container"&gt;\n</FONT><A NAME="4"></A><FONT color = #FF00FF><A HREF="match3-1.html#4" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_5.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n        &lt;img className="movie-img" alt="filme.png" src={props.posterURL}/&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_Movies_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from "react";\nimport { Link } from "react-router-dom";\nimport Movie from "./Movie";\n\nexport default function Movies(props) {\n  const [movies, setMovies] = useState();\n\n  useEffect(() =&gt; {\n    const promisse = axios.get("https://mock-api.driven.com.br/api/v4/cineflex/movies");\n\n    promisse.then((response) =&gt; {\n      setMovies(response.data);\n    });\n  }, []);\n\n  if(movies === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading}/&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const moviesReader = movies.map((movie) =&gt; {\n    return (\n      &lt;Link key={movie.id} to={`/movie-section/${movie.id}`}&gt;\n        &lt;Movie id={movie.id} posterURL={movie.posterURL} /&gt;\n      &lt;/Link&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o filme&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movies-container"&gt;\n          &lt;div className="movies-content"&gt;\n            { moviesReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_SectionDetails_DefaultSeat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useState } from \'react\';\n</FONT><A NAME="6"></A><FONT color = #00FF00><A HREF="match3-1.html#6" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Você realmente deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está disponível\');\n</FONT>    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n        { props.name }\n<A NAME="0"></A><FONT color = #FF0000><A HREF="match3-1.html#0" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_46.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n      &lt;/div&gt; \n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_SectionDetails_InfoSeat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useEffect, useState } from "react";\nimport { cpfMask } from \'./mask\'\n\nexport default function InfoSeat(props) {\n  const [name, setName] = useState("");\n  const [cpf, setCpf] = useState("");\n  const [inputCondition, setInputCondition] = useState("");\n  const [confirmButtonCondition, setConfirmButtonCondition] = useState("");\n  const [editButtonCondition, setEditButtonCondition] = useState("disabled-button");\n  const [inputInfo, setInputInfo] = useState({ idAssento: \'\', nome: "", cpf: "" });\n  const [indexBuyer, setIndexBuyer] = useState(null);\n  const [edited, setEdited] = useState(false);\n  const [newNumberSeat, setNewNumberSeat] = useState(props.seatNumberStage);\n\n  useEffect(() =&gt; {\n    setNewNumberSeat(newNumberSeat);\n  }, [newNumberSeat])\n\n  function handleName(e){\n    setName(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      nome: e.target.value\n    });\n  }\n\n  function handleCPF(e){\n    setCpf(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      cpf: cpfMask(e.target.value)\n    });\n  }\n\n  function handleDelete() {\n    if(window.confirm("Você realmente deseja deletar esta reserva?")){\n      props.idSeatSetStage(props.seatNumber);\n      props.seatStage(\n        {\n          ids: props.seatValue.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== props.seatNumber }),\n          compradores: props.seatValue.compradores.filter((comprador) =&gt; { return comprador.idAssento !== props.seatNumber })\n        }\n      );\n    }else{\n      return;\n    }\n  }\n\n  function handleEdit() {\n    if(window.confirm("Você realmente deseja editar esta reserva?")){\n      setInputCondition("");\n      setEditButtonCondition("disabled-button");\n      setConfirmButtonCondition("");\n      for (let i = 0; i &lt; props.seatValue.compradores.length; i++) {\n        const element = props.seatValue.compradores[i].idAssento;\n        if(props.seatNumber === element){\n          setIndexBuyer(i);\n        }\n      }\n  \n      setEdited(true);\n      setInputInfo({ idAssento: props.seatNumber, nome: name, cpf: cpf });\n    }else{\n      return;\n    }\n  }\n\n  function handleConfirm() {\n    if(inputInfo.idAssento === \'\' || inputInfo.nome === \'\' || inputInfo.cpf === \'\'){\n      alert("Você não pode confirmar uma reserva sem antes preencher os dados.");\n      return;\n    }\n\n    if(window.confirm("Você realmente deseja confirmar esta reserva?")){\n      if(edited === false){\n        if(inputInfo.cpf.length &lt; 14){\n          alert("Reveja o campo de CPF, não pode ser menor do que 14 caracteres.");\n          return;\n        }else{\n          if(cpfValidation(inputInfo.cpf)){\n            setInputCondition("disabled-input");\n            setConfirmButtonCondition("disabled-button");\n            setEditButtonCondition("");\n      \n            setInputInfo({ idAssento: \'\', nome: "", cpf: "" });\n            props.seatStage({\n              ids: [ ...props.seatValue.ids ],\n              compradores: [\n                ...props.seatValue.compradores,\n                inputInfo\n              ]\n            });\n          }else{\n            alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n            return;\n          }\n        }\n      }else{\n        if(cpfValidation(inputInfo.cpf)){\n          setInputCondition("disabled-input");\n          setConfirmButtonCondition("disabled-button");\n          setEditButtonCondition("");\n  \n          props.seatStage({\n            ids: [ ...props.seatValue.ids ],\n            compradores: props.seatValue.compradores.map((comprador, index) =&gt; {\n              if(comprador.idAssento === props.seatNumber){\n                return props.seatValue.compradores[indexBuyer] = inputInfo;\n              }else{\n                return props.seatValue.compradores[index];\n              }\n            })\n          });\n        }else{\n          alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n          return;\n        }\n      }\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div className="form-group-container"&gt;\n        &lt;p className="form-group-title"&gt;Assento {newNumberSeat}&lt;/p&gt;\n\n        &lt;FromGroup inputSituation={inputCondition} confirmButtonSituation={confirmButtonCondition}\n          editButtonSituation={editButtonCondition} nameValue={name} nameStage={handleName} cpfValue={cpfMask(cpf)} \n          cpfStage={handleCPF} confirmAction={handleConfirm} editAction={handleEdit} deleteAction={handleDelete}\n        /&gt;\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction FromGroup(props) {\n  return(\n    &lt;Fragment&gt;\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;Nome do comprador:&lt;/label&gt;\n          &lt;input value={props.nameValue} onChange={props.nameStage} type="text" className={`form-control ${props.inputSituation}`} placeholder="Digite seu nome..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;CPF do comprador:&lt;/label&gt;\n          &lt;input value={props.cpfValue} onChange={props.cpfStage} type="text" className={`form-control ${props.inputSituation}`} maxLength="14" placeholder="Digite seu CPF..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group-buttons-container"&gt;\n          &lt;button onClick={props.confirmAction} type="button" className={`form-button-confirm ${props.confirmButtonSituation}`}&gt;\n            Confirmar &lt;ion-icon name="checkmark-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;\n          &lt;button onClick={props.editAction} type="button" className={`form-button-edit ${props.editButtonSituation}`}&gt;\n            Editar &lt;ion-icon name="create-outline"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;   \n          &lt;button onClick={props.deleteAction} type="button" className="form-button-delete"&gt;\n            Deletar &lt;ion-icon name="close-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;  \n        &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction cpfValidation(cpf) {\t\n\tcpf = cpf.replace(/[^\\d]+/g,\'\');\t\n\tif(cpf === \'\') return false;\n\n\t// Elimina CPFs invalidos conhecidos\t\n\tif (cpf.length !== 11 || \n\t\tcpf === "00000000000" || \n\t\tcpf === "11111111111" || \n\t\tcpf === "22222222222" || \n\t\tcpf === "33333333333" || \n\t\tcpf === "44444444444" || \n\t\tcpf === "55555555555" || \n\t\tcpf === "66666666666" || \n\t\tcpf === "77777777777" || \n\t\tcpf === "88888888888" || \n\t\tcpf === "99999999999")\n\t\t\treturn false;\n\n\t// Valida 1o digito\t\n\tlet add = 0;\n  let rev;\t\n\tfor (let i = 0; i &lt; 9; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (10 - i);\t\n\t\trev = 11 - (add % 11);\t\n\t\tif (rev === 10 || rev === 11)\t\t\n\t\t\trev = 0;\t\n\t\tif (rev !== parseInt(cpf.charAt(9)))\t\t\n\t\t\treturn false;\t\n\n\t// Valida 2o digito\t\n\tadd = 0;\t\n\tfor (let i = 0; i &lt; 10; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (11 - i);\t\n\trev = 11 - (add % 11);\t\n\tif (rev === 10 || rev === 11)\t\n\t\trev = 0;\t\n\tif (rev !== parseInt(cpf.charAt(10)))\n\t\treturn false;\t\t\n\treturn true;   \n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_SectionDetails_Seat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useState } from \'react\';\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    props.stageNumberSeat(props.name);\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Você realmente deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está disponível\');\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n    {props.idSeatSetStage !== \'\' ?\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt; \n      :\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt;\n    }\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_SectionDetails_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { useNavigate, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\nimport Seat from \'./Seat\';\nimport InfoSeat from \'./InfoSeat\';\nimport DefaultSeat from \'./DefaultSeat\';\n\nexport default function SectionDetails(props) {\n  const { idSection } = useParams();\n  const navigate = useNavigate();\n  const [sectionDetais, setSectionDetais] = useState();\n  const [reserveSeats, setReserveSeats] = useState({ids: [], compradores: []});\n  const [buttonOpacity, setButtonOpacity] = useState(\'\');\n  const [idSeatInfo, setIdSeatInfo] = useState(0);\n  const [seatNumberName, setSeatNumberName] = useState(0);\n  \n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/showtimes/${idSection}/seats`);\n  \n    promisse.then((response) =&gt; {\n      setSectionDetais(response.data);\n    });\n  }, [idSection]);\n\n  useEffect(() =&gt; {\n    if(reserveSeats.ids.length === 0){\n      setButtonOpacity(\'opacity-button\');\n    }else{\n      setButtonOpacity(\'\');\n    }\n  }, [reserveSeats.ids]);\n\n  useEffect(() =&gt; {\n    if(idSeatInfo !== 0){\n      setIdSeatInfo(0);\n    }\n  }, [idSeatInfo]);\n\n  if(sectionDetais === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  function handleSeat(idSeat, addArray){\n    if(addArray === undefined){\n      return;\n    }\n\n    if(addArray){\n      setReserveSeats(\n        { ids: [ ...reserveSeats.ids, idSeat ], \n          compradores: [ ...reserveSeats.compradores ]\n        }\n      );\n    }else{\n      const objectReader = reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento === idSeat; });\n\n      if(objectReader.length === 1){\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }else{\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }\n    }\n  }\n\n  function numberSeatValidation(currentSeat) {\n    if(currentSeat &lt; 10){\n      let newCurrentSeat = "0" + currentSeat\n      return newCurrentSeat;\n    }else{\n      return currentSeat;\n    }\n  }\n\n  const sectionDetaisReader = sectionDetais.seats.map((currentSeat) =&gt; {\n    return (\n      &lt;Fragment key={currentSeat.id}&gt;\n        {currentSeat.isAvailable ?\n          idSeatInfo === currentSeat.id ?\n            &lt;DefaultSeat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)}\n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              idSeatSetStage={setIdSeatInfo}\n            /&gt;\n          :\n            &lt;Seat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)} \n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              stageNumberSeat={setSeatNumberName}\n            /&gt;\n        :\n          &lt;Seat classSeat=\'current-seat-unavailable\' name={numberSeatValidation(currentSeat.name)}\n            stageNumberSeat={setSeatNumberName}\n          /&gt;\n        }\n      &lt;/Fragment&gt;\n    );\n  });\n\n  const reserveSeatsReader = reserveSeats.ids.map((reserveSeat) =&gt; {\n    return(\n      &lt;Fragment key={reserveSeat}&gt;\n        &lt;InfoSeat seatNumber={reserveSeat} seatNumberStage={seatNumberName} \n          stageNumberSeat={setSeatNumberName} seatValue={reserveSeats} \n          seatStage={setReserveSeats} idSeatSetStage={setIdSeatInfo}\n        /&gt;\n      &lt;/Fragment&gt;\n    );\n  });\n\n  function sendObject() {\n    if(reserveSeats.ids.length !== 0 || reserveSeats.compradores.length !== 0){\n      if(window.confirm("Você confirma todas as seleções feitas?")){\n        if(reserveSeats.ids.length === reserveSeats.compradores.length){\n          props.sendSuccesObject(reserveSeats, idSection, \'\');\n          const promisse = axios.post(`https://mock-api.driven.com.br/api/v4/cineflex/seats/book-many`, reserveSeats);\n          promisse.then(() =&gt; navigate(\'/success-screen\'));\n          promisse.catch(() =&gt; window.location.reload(true));\n        }else{\n          alert(`Por gentileza, reveja os campos dos assentos selecionados, existem alguns assentos que estão vazios, ou que não foram confirmados.`);\n</FONT><A NAME="3"></A><FONT color = #00FFFF><A HREF="match3-1.html#3" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_7.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n          return;\n        }\n      }\n    }else{\n      alert("Por gentileza, selecione os assentos desejados para continuar.");\n      return;\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o(s) assento(s)&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-container\'&gt;\n          &lt;div className=\'seats-content\'&gt;\n            { sectionDetaisReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-subtitle-container\'&gt;\n          &lt;div className=\'seats-subtitle-content\'&gt;\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-selected\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Selecionado&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-available\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Disponível&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-unavailable\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Indisponível&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;form className=\'form\'&gt;\n          { reserveSeats.ids.length === 0 ?\n            &lt;p className=\'form-info\'&gt;Por gentileza, selecione os assentos desejados.&lt;/p&gt;\n</FONT><A NAME="5"></A><FONT color = #FF0000><A HREF="match3-1.html#5" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_4.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n            :\n            &lt;Fragment&gt;\n              {reserveSeatsReader}\n            &lt;/Fragment&gt;\n          }\n\n          &lt;button onClick={() =&gt; sendObject()} type="button" className={`form-button ${buttonOpacity}`}&gt;Reservar assento(s)&lt;/button&gt;\n        &lt;/form&gt;\n\n        &lt;Bottombar title={sectionDetais.movie.title} posterURL={sectionDetais.movie.posterURL} weekday={sectionDetais.day.weekday} showtime={sectionDetais.name} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_SectionDetails_mask.js ------------------- &lt;/filePath&gt; */ \nexport const cpfMask = value =&gt; {\n    return value\n      .replace(/\\D/g, \'\') // substitui qualquer caracter que nao seja numero por nada\n      .replace(/(\\d{3})(\\d)/, \'$1.$2\') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\n      .replace(/(\\d{3})(\\d)/, \'$1.$2\')\n      .replace(/(\\d{3})(\\d{1,2})/, \'$1-$2\')\n      .replace(/(-\\d{2})\\d+?$/, \'$1\') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n</FONT>  }\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_components_SuccessScreen_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="1"></A><FONT color = #00FF00><A HREF="match3-1.html#1" TARGET="1"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useState, useEffect } from \'react\';\nimport { Link } from \'react-router-dom\';\n\nexport default function SuccessScreen(props) {\n  const [movieSection, setMovieSection] = useState();\n\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/showtimes/${props.successObject.sectionID}/seats`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  },[props.successObject.sectionID]);\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title-success"&gt;\n            Pedido feito\n            &lt;br /&gt;\n            com sucesso!\n          &lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movie-section-flex"&gt;\n          &lt;div className="movie-section-content"&gt;\n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Filme e sessão&lt;/p&gt;\n              &lt;div className="movie-section-container-subtitle"&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.movie.title}&lt;/p&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.day.date} {movieSection.name}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Ingressos&lt;/p&gt;\n              {props.successObject.ids.map((id) =&gt; {\n                return(\n                  &lt;p className="movie-section-subtitle" key={id}&gt;Assento {id}&lt;/p&gt;\n                );\n              })}\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Compradores&lt;/p&gt;\n\n              {props.successObject.compradores.map((comprador,index) =&gt; {\n                return(\n                  &lt;Fragment key={comprador.idAssento}&gt;\n                    &lt;div className="movie-section-div"&gt;\n                      &lt;p className="movie-section-subtitle-seat"&gt;Assento {comprador.idAssento}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;Nome: {comprador.nome}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;CPF: {comprador.cpf}&lt;/p&gt;\n                    &lt;/div&gt;\n                  &lt;/Fragment&gt;\n                );\n              })}\n            &lt;/div&gt;\n          &lt;/div&gt;\n\n          &lt;Link to=\'/\'&gt;\n            &lt;div className=\'movie-section-button-container\'&gt;\n              &lt;button className="movie-section-button"&gt;Voltar pra Home&lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/Link&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: cineflex_src_index.js ------------------- &lt;/filePath&gt; */ \nimport ReactDOM from "react-dom";\n</FONT>import App from "./App.js";\n\nconst app = &lt;App /&gt;;\nconst root = document.querySelector(".root");\nReactDOM.render(app, root);</PRE>\n</PRE>\n</BODY>\n</HTML>\n',
          '<HTML>\n<HEAD>\n<TITLE>./repositories/CineFlex_-_Front/RUI_DE_ALBUQUERQUE_LOPES_NETO/</TITLE>\n</HEAD>\n<BODY BGCOLOR=white>\n<HR>\n./students-front5680285040502497/IsabellyWilhelm/<p><PRE>\n&gt;&gt;&gt;&gt; file: main.js\n\n /* &lt;filePath&gt; ------------------- Arquivo: src_App.js ------------------- &lt;/filePath&gt; */ \n<A NAME="7"></A><FONT color = #0000FF><A HREF="match3-0.html#7" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { BrowserRouter, Routes, Route } from "react-router-dom";\nimport { useState } from \'react\';\nimport Topbar from "./components/Bars/Topbar";\nimport Movies from "./components/Movies";\nimport MovieSection from "./components/MovieSection";\nimport SectionDetails from "./components/Sectionsecond";\nimport SuccessScreen from "./components/Success";\nimport Loaging from "./assets/img/loading.png";\nimport "./css/reset.css";\nimport "./css/style.css";\n\nexport default function App() {\n  const [finalObject, setFinalObject] = useState({});\n\n  function updateObject(currentObject, sectionID, object) {\n    setFinalObject(object = { ...currentObject, sectionID });\n  }\n\n  return(\n    &lt;BrowserRouter&gt;\n      &lt;Topbar /&gt;\n      &lt;Routes&gt;\n        &lt;Route path="/" element={&lt;Movies loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/movie-section/:idMovie" element={&lt;MovieSection loading={Loaging} /&gt;} /&gt;\n        &lt;Route path="/section-details/:idSection" element={&lt;SectionDetails loading={Loaging} sendSuccesObject={updateObject} /&gt;} /&gt;\n        &lt;Route path="/success-screen" element={&lt;SuccessScreen loading={Loaging} successObject={finalObject} /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/BrowserRouter&gt;\n</FONT>  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: src_index.js ------------------- &lt;/filePath&gt; */ \nimport ReactDOM from "react-dom";\nimport App from "./App.js";\nconst app = &lt;App /&gt;;\nconst root = document.querySelector(".root");\nReactDOM.render(app, root);\n /* &lt;filePath&gt; ------------------- Arquivo: MovieSection_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="2"></A><FONT color = #0000FF><A HREF="match3-0.html#2" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_2_7.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { Link, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\n\nexport default function MovieSection(props) {\n  const { idMovie } = useParams();\n  const [movieSection, setMovieSection] = useState();\n\n  //--------------------PFAZER AS SESSÕES DO FILME-------------------------------------\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/movies/${idMovie}/showtimes`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  }, [idMovie]);\n\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const movieSectionReader = movieSection.days.map((currentMovieWeekday) =&gt; {\n    return (\n      &lt;div className=\'current-movie\' key={currentMovieWeekday.id}&gt;\n        &lt;p className=\'current-movie-weekday\'&gt;\n          { `${currentMovieWeekday.weekday} - ${currentMovieWeekday.date}` }\n        &lt;/p&gt;\n\n        {currentMovieWeekday.showtimes.map((currentMovieShowTimes) =&gt; {\n          return (\n            &lt;Link key={currentMovieShowTimes.id} to={`/section-details/${currentMovieShowTimes.id}`}&gt;\n              &lt;button className=\'current-movie-show-times-button\'&gt;\n                { currentMovieShowTimes.name }\n              &lt;/button&gt;\n            &lt;/Link&gt;\n          );\n        })}\n      &lt;/div&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o horário&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'movie-section-container\'&gt;\n          { movieSectionReader }\n        &lt;/div&gt;\n\n        &lt;Bottombar title={movieSection.title} posterURL={movieSection.posterURL} weekday={undefined} showtime={undefined} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Bottombar_index.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment } from \'react\';\n</FONT><A NAME="8"></A><FONT color = #00FFFF><A HREF="match3-0.html#8" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nexport default function Bottombar(props) {\n  return(\n    &lt;Fragment&gt;\n      &lt;div className=\'bottombar\'&gt;\n        &lt;div className=\'bottombar-content\'&gt;\n          &lt;div className=\'bottombar-img-content\'&gt;\n            &lt;img className=\'bottombar-img\' alt={`${props.title} posterURL`} src={props.posterURL}/&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        {(props.weekday === undefined && props.showtime === undefined) ?\n          &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n          :\n          &lt;div&gt;\n            &lt;p className=\'bottombar-title\'&gt;{props.title}&lt;/p&gt;\n            &lt;p className=\'bottombar-title\'&gt;{`${props.weekday} - ${props.showtime}`}&lt;/p&gt;\n</FONT><A NAME="4"></A><FONT color = #FF00FF><A HREF="match3-0.html#4" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_5.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n          &lt;/div&gt;\n        }\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Movies_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from "react";\nimport { Link } from "react-router-dom";\nimport Movie from "./movie";\nexport default function Movies(props) {\n  const [movies, setMovies] = useState();\n\n//----------------------------------------------------- OBTER FILME AQUI----------------------------------------\n\n  useEffect(() =&gt; {\n    const promisse = axios.get("https://mock-api.driven.com.br/api/v7/cineflex/movies");\n\n    promisse.then((response) =&gt; {\n      setMovies(response.data);\n    });\n  }, []);\n\n  if(movies === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading}/&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );\n  }\n\n  const moviesReader = movies.map((movie) =&gt; {\n    return (\n      &lt;Link key={movie.id} to={`/movie-section/${movie.id}`}&gt;\n        &lt;Movie id={movie.id} posterURL={movie.posterURL} /&gt;\n      &lt;/Link&gt;\n    );\n  });\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o filme&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movies-container"&gt;\n          &lt;div className="movies-content"&gt;\n            { moviesReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Topbar_index.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment } from "react";\n</FONT><A NAME="9"></A><FONT color = #FF00FF><A HREF="match3-0.html#9" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_4_2.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { useNavigate } from "react-router-dom";\n\nexport default function Topbar() {\n  const navigate = useNavigate();\n\n  function hadleNavigate() {\n    navigate(-1);\n  }\n\n  return(\n    &lt;Fragment&gt;\n      {window.location.pathname !== \'/\' ?\n        &lt;div className="topbar-backpage"&gt;\n          &lt;div className="topbar-backpage-content"&gt;\n            &lt;h1 className="topbar-brand-backpage"&gt;CINEFLEX&lt;/h1&gt;\n\n            &lt;div className=\'icon-topbar\'&gt;\n              &lt;ion-icon onClick={hadleNavigate} name="arrow-undo-circle" /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      :\n        &lt;div className="topbar"&gt;\n          &lt;h1 className="topbar-brand"&gt;CINEFLEX&lt;/h1&gt;\n        &lt;/div&gt;\n      }\n    &lt;/Fragment&gt;\n</FONT>  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_DefaultSeat.js ------------------- &lt;/filePath&gt; */ \n<A NAME="6"></A><FONT color = #00FF00><A HREF="match3-0.html#6" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_3.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport { Fragment, useState } from \'react\';\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está mais disponível\');\n</FONT>    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n        { props.name }\n      &lt;/div&gt; \n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Success_index.js ------------------- &lt;/filePath&gt; */ \n<A NAME="1"></A><FONT color = #00FF00><A HREF="match3-0.html#1" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_1_10.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\nimport axios from \'axios\';\nimport { Fragment, useState, useEffect } from \'react\';\nimport { Link } from \'react-router-dom\';\n\nexport default function SuccessScreen(props) {\n  const [movieSection, setMovieSection] = useState();\n\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/showtimes/${props.successObject.sectionID}/seats`);\n    \n    promisse.then((response) =&gt; {\n      setMovieSection(response.data);\n    });\n  },[props.successObject.sectionID]);\n\n  if(movieSection === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title-success"&gt;\n            Pedido feito\n            &lt;br /&gt;\n            com sucesso!\n          &lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className="movie-section-flex"&gt;\n          &lt;div className="movie-section-content"&gt;\n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Filme e sessão&lt;/p&gt;\n              &lt;div className="movie-section-container-subtitle"&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.movie.title}&lt;/p&gt;\n                &lt;p className="movie-section-subtitle"&gt;{movieSection.day.date} {movieSection.name}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Ingressos&lt;/p&gt;\n              {props.successObject.ids.map((id) =&gt; {\n                return(\n                  &lt;p className="movie-section-subtitle" key={id}&gt;Assento {id}&lt;/p&gt;\n                );\n              })}\n            &lt;/div&gt;\n              \n            &lt;div className="movie-section"&gt;\n              &lt;p className="movie-section-title"&gt;Compradores&lt;/p&gt;\n\n              {props.successObject.compradores.map((comprador,index) =&gt; {\n                return(\n                  &lt;Fragment key={comprador.idAssento}&gt;\n                    &lt;div className="movie-section-div"&gt;\n                      &lt;p className="movie-section-subtitle-seat"&gt;Assento {comprador.idAssento}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;Nome: {comprador.nome}&lt;/p&gt;\n                      &lt;p className="movie-section-subtitle"&gt;CPF: {comprador.cpf}&lt;/p&gt;\n                    &lt;/div&gt;\n                  &lt;/Fragment&gt;\n                );\n              })}\n            &lt;/div&gt;\n          &lt;/div&gt;\n\n          &lt;Link to=\'/\'&gt;\n            &lt;div className=\'movie-section-button-container\'&gt;\n              &lt;button className="movie-section-button"&gt;Voltar pra Home&lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/Link&gt;\n        &lt;/div&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Movies_movie.js ------------------- &lt;/filePath&gt; */ \nexport default function Movie(props) {\n</FONT><A NAME="10"></A><FONT color = #FF0000><A HREF="match3-0.html#10" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_0.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n    return(\n      &lt;div id={props.id} className="movie"&gt;\n        &lt;div className="movie-img-container"&gt;\n</FONT>          &lt;img className="movie-img" alt="filme.png" src={props.posterURL}/&gt;\n<A NAME="0"></A><FONT color = #FF0000><A HREF="match3-0.html#0" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_46.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_InfoSeat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useEffect, useState } from "react";\nimport { cpfMask } from \'./mask\'\n\nexport default function InfoSeat(props) {\n  const [name, setName] = useState("");\n  const [cpf, setCpf] = useState("");\n  const [inputCondition, setInputCondition] = useState("");\n  const [confirmButtonCondition, setConfirmButtonCondition] = useState("");\n  const [editButtonCondition, setEditButtonCondition] = useState("disabled-button");\n  const [inputInfo, setInputInfo] = useState({ idAssento: \'\', nome: "", cpf: "" });\n  const [indexBuyer, setIndexBuyer] = useState(null);\n  const [edited, setEdited] = useState(false);\n  const [newNumberSeat, setNewNumberSeat] = useState(props.seatNumberStage);\n\n  useEffect(() =&gt; {\n    setNewNumberSeat(newNumberSeat);\n  }, [newNumberSeat])\n\n  function handleName(e){\n    setName(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      nome: e.target.value\n    });\n  }\n\n  function handleCPF(e){\n    setCpf(e.target.value);\n    setInputInfo({\n      ...inputInfo,\n      idAssento: props.seatNumber,\n      cpf: cpfMask(e.target.value)\n    });\n  }\n\n  function handleDelete() {\n    if(window.confirm("Você realmente deseja deletar esta reserva?")){\n      props.idSeatSetStage(props.seatNumber);\n      props.seatStage(\n        {\n          ids: props.seatValue.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== props.seatNumber }),\n          compradores: props.seatValue.compradores.filter((comprador) =&gt; { return comprador.idAssento !== props.seatNumber })\n        }\n      );\n    }else{\n      return;\n    }\n  }\n\n  function handleEdit() {\n    if(window.confirm("Você realmente deseja editar esta reserva?")){\n      setInputCondition("");\n      setEditButtonCondition("disabled-button");\n      setConfirmButtonCondition("");\n      for (let i = 0; i &lt; props.seatValue.compradores.length; i++) {\n        const element = props.seatValue.compradores[i].idAssento;\n        if(props.seatNumber === element){\n          setIndexBuyer(i);\n        }\n      }\n  \n      setEdited(true);\n      setInputInfo({ idAssento: props.seatNumber, nome: name, cpf: cpf });\n    }else{\n      return;\n    }\n  }\n\n  function handleConfirm() {\n    if(inputInfo.idAssento === \'\' || inputInfo.nome === \'\' || inputInfo.cpf === \'\'){\n      alert("Você não pode confirmar uma reserva sem antes preencher os dados.");\n      return;\n    }\n\n    if(window.confirm("Você realmente deseja confirmar esta reserva?")){\n      if(edited === false){\n        if(inputInfo.cpf.length &lt; 14){\n          alert("Reveja o campo de CPF, não pode ser menor do que 14 caracteres.");\n          return;\n        }else{\n          if(cpfValidation(inputInfo.cpf)){\n            setInputCondition("disabled-input");\n            setConfirmButtonCondition("disabled-button");\n            setEditButtonCondition("");\n      \n            setInputInfo({ idAssento: \'\', nome: "", cpf: "" });\n            props.seatStage({\n              ids: [ ...props.seatValue.ids ],\n              compradores: [\n                ...props.seatValue.compradores,\n                inputInfo\n              ]\n            });\n          }else{\n            alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n            return;\n          }\n        }\n      }else{\n        if(cpfValidation(inputInfo.cpf)){\n          setInputCondition("disabled-input");\n          setConfirmButtonCondition("disabled-button");\n          setEditButtonCondition("");\n  \n          props.seatStage({\n            ids: [ ...props.seatValue.ids ],\n            compradores: props.seatValue.compradores.map((comprador, index) =&gt; {\n              if(comprador.idAssento === props.seatNumber){\n                return props.seatValue.compradores[indexBuyer] = inputInfo;\n              }else{\n                return props.seatValue.compradores[index];\n              }\n            })\n          });\n        }else{\n          alert("O CPF informado é inválido, por gentileza, reveja o campo.");\n          return;\n        }\n      }\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;div className="form-group-container"&gt;\n        &lt;p className="form-group-title"&gt;Assento {newNumberSeat}&lt;/p&gt;\n\n        &lt;FromGroup inputSituation={inputCondition} confirmButtonSituation={confirmButtonCondition}\n          editButtonSituation={editButtonCondition} nameValue={name} nameStage={handleName} cpfValue={cpfMask(cpf)} \n          cpfStage={handleCPF} confirmAction={handleConfirm} editAction={handleEdit} deleteAction={handleDelete}\n        /&gt;\n      &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction FromGroup(props) {\n  return(\n    &lt;Fragment&gt;\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;Nome do comprador:&lt;/label&gt;\n          &lt;input value={props.nameValue} onChange={props.nameStage} type="text" className={`form-control ${props.inputSituation}`} placeholder="Digite seu nome..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group"&gt;\n          &lt;label className=\'form-label\'&gt;CPF do comprador:&lt;/label&gt;\n          &lt;input value={props.cpfValue} onChange={props.cpfStage} type="text" className={`form-control ${props.inputSituation}`} maxLength="14" placeholder="Digite seu CPF..." /&gt;\n        &lt;/div&gt;\n\n        &lt;div className="form-group-buttons-container"&gt;\n          &lt;button onClick={props.confirmAction} type="button" className={`form-button-confirm ${props.confirmButtonSituation}`}&gt;\n            Confirmar &lt;ion-icon name="checkmark-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;\n          &lt;button onClick={props.editAction} type="button" className={`form-button-edit ${props.editButtonSituation}`}&gt;\n            Editar &lt;ion-icon name="create-outline"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;   \n          &lt;button onClick={props.deleteAction} type="button" className="form-button-delete"&gt;\n            Deletar &lt;ion-icon name="close-circle"&gt;&lt;/ion-icon&gt;\n          &lt;/button&gt;  \n        &lt;/div&gt;\n    &lt;/Fragment&gt;\n  );\n}\n\nfunction cpfValidation(cpf) {\t\n\tcpf = cpf.replace(/[^\\d]+/g,\'\');\t\n\tif(cpf === \'\') return false;\n\tif (cpf.length !== 11 || \n\t\tcpf === "00000000000" || \n\t\tcpf === "11111111111" || \n\t\tcpf === "22222222222" || \n\t\tcpf === "33333333333" || \n\t\tcpf === "44444444444" || \n\t\tcpf === "55555555555" || \n\t\tcpf === "66666666666" || \n\t\tcpf === "77777777777" || \n\t\tcpf === "88888888888" || \n\t\tcpf === "99999999999")\n\t\t\treturn false;\n\tlet add = 0;\n  let rev;\t\n\tfor (let i = 0; i &lt; 9; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (10 - i);\t\n\t\trev = 11 - (add % 11);\t\n\t\tif (rev === 10 || rev === 11)\t\t\n\t\t\trev = 0;\t\n\t\tif (rev !== parseInt(cpf.charAt(9)))\t\t\n\t\t\treturn false;\t\n\tadd = 0;\t\n\tfor (let i = 0; i &lt; 10; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (11 - i);\t\n\trev = 11 - (add % 11);\t\n\tif (rev === 10 || rev === 11)\t\n\t\trev = 0;\t\n\tif (rev !== parseInt(cpf.charAt(10)))\n\t\treturn false;\t\t\n\treturn true;   \n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_Seat.js ------------------- &lt;/filePath&gt; */ \nimport { Fragment, useState } from \'react\';\n\nexport default function Seat(props) {\n  const [clickedSeat, setClickedSeat] = useState(props.classSeat);\n\n  function chosenSeat(selectedSeat, valueClickedSeat) {\n    props.stageNumberSeat(props.name);\n    if(selectedSeat === `current-seat-available`){\n      if(valueClickedSeat === `current-seat-selected`){\n        const objectReader = props.seatState.compradores.filter((comprador) =&gt; { \n          return comprador.idAssento === props.id; \n        });\n\n        if(objectReader.length === 0){\n          props.handle(props.id, false);\n          setClickedSeat(`current-seat-available`);\n        }else{\n          if(window.confirm("Você realmente deseja desmarcar este assento?")){\n            props.handle(props.id, false);\n            setClickedSeat(`current-seat-available`);\n          }else{\n            props.handle(props.id, undefined);\n            setClickedSeat(`current-seat-selected`);\n          }\n        }\n      }else{\n        props.handle(props.id, true);\n        setClickedSeat(`current-seat-selected`);\n      }\n    }else{\n      alert(\'Esse assento não está disponível\');\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n    {props.idSeatSetStage !== \'\' ?\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt; \n      :\n        &lt;div onClick={() =&gt; chosenSeat(props.classSeat, clickedSeat)} className={clickedSeat}&gt;\n          { props.name }\n        &lt;/div&gt;\n    }\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_index.js ------------------- &lt;/filePath&gt; */ \nimport axios from \'axios\';\nimport { Fragment, useEffect, useState } from \'react\';\nimport { useNavigate, useParams } from \'react-router-dom\';\nimport Bottombar from \'../Bars/Bottombar\';\nimport Seat from \'./Seat\';\nimport InfoSeat from \'./InfoSeat\';\nimport DefaultSeat from \'./DefaultSeat\';\n\nexport default function SectionDetails(props) {\n  const { idSection } = useParams();\n  const navigate = useNavigate();\n  const [sectionDetais, setSectionDetais] = useState();\n  const [reserveSeats, setReserveSeats] = useState({ids: [], compradores: []});\n  const [buttonOpacity, setButtonOpacity] = useState(\'\');\n  const [idSeatInfo, setIdSeatInfo] = useState(0);\n  const [seatNumberName, setSeatNumberName] = useState(0);\n  \n  //-----------------------SEATS PARA SESSÃO---------------------------------------------------\n  useEffect(() =&gt; {\n    const promisse = axios.get(`https://mock-api.driven.com.br/api/v7/cineflex/showtimes/${idSection}/seats`);\n  \n    promisse.then((response) =&gt; {\n      setSectionDetais(response.data);\n    });\n  }, [idSection]);\n\n  useEffect(() =&gt; {\n    if(reserveSeats.ids.length === 0){\n      setButtonOpacity(\'opacity-button\');\n    }else{\n      setButtonOpacity(\'\');\n    }\n  }, [reserveSeats.ids]);\n\n  useEffect(() =&gt; {\n    if(idSeatInfo !== 0){\n      setIdSeatInfo(0);\n    }\n  }, [idSeatInfo]);\n\n  if(sectionDetais === undefined){\n    return(\n      &lt;Fragment&gt;\n        &lt;div className="loading-screen"&gt;\n          &lt;img className="loading-screen-icon" alt="loading.gif" src={props.loading} /&gt;\n        &lt;/div&gt;\n      &lt;/Fragment&gt;\n    );    \n  }\n\n  function handleSeat(idSeat, addArray){\n    if(addArray === undefined){\n      return;\n    }\n\n    if(addArray){\n      setReserveSeats(\n        { ids: [ ...reserveSeats.ids, idSeat ], \n          compradores: [ ...reserveSeats.compradores ]\n        }\n      );\n    }else{\n      const objectReader = reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento === idSeat; });\n\n      if(objectReader.length === 1){\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }else{\n        setReserveSeats(\n          { ids: reserveSeats.ids.filter((idSeatCurrent) =&gt; { return idSeatCurrent !== idSeat; }), \n            compradores: reserveSeats.compradores.filter((comprador) =&gt; { return comprador.idAssento !== idSeat; })\n          }\n        );\n      }\n    }\n  }\n\n  function numberSeatValidation(currentSeat) {\n    if(currentSeat &lt; 10){\n      let newCurrentSeat = "0" + currentSeat\n      return newCurrentSeat;\n    }else{\n      return currentSeat;\n    }\n  }\n\n  const sectionDetaisReader = sectionDetais.seats.map((currentSeat) =&gt; {\n    return (\n      &lt;Fragment key={currentSeat.id}&gt;\n        {currentSeat.isAvailable ?\n          idSeatInfo === currentSeat.id ?\n            &lt;DefaultSeat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)}\n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              idSeatSetStage={setIdSeatInfo}\n            /&gt;\n          :\n            &lt;Seat classSeat=\'current-seat-available\' name={numberSeatValidation(currentSeat.name)} \n              seatState={reserveSeats} id={currentSeat.id} handle={handleSeat}\n              stageNumberSeat={setSeatNumberName}\n            /&gt;\n        :\n          &lt;Seat classSeat=\'current-seat-unavailable\' name={numberSeatValidation(currentSeat.name)}\n            stageNumberSeat={setSeatNumberName}\n          /&gt;\n        }\n      &lt;/Fragment&gt;\n    );\n  });\n\n  const reserveSeatsReader = reserveSeats.ids.map((reserveSeat) =&gt; {\n    return(\n      &lt;Fragment key={reserveSeat}&gt;\n        &lt;InfoSeat seatNumber={reserveSeat} seatNumberStage={seatNumberName} \n          stageNumberSeat={setSeatNumberName} seatValue={reserveSeats} \n          seatStage={setReserveSeats} idSeatSetStage={setIdSeatInfo}\n        /&gt;\n      &lt;/Fragment&gt;\n    );\n  });\n///USAR BOOK MANY PARA ASSENTOS\n  function sendObject() {\n    if(reserveSeats.ids.length !== 0 || reserveSeats.compradores.length !== 0){\n      if(window.confirm("Você confirma todas as seleções feitas?")){\n        if(reserveSeats.ids.length === reserveSeats.compradores.length){\n          props.sendSuccesObject(reserveSeats, idSection, \'\');\n          const promisse = axios.post(`https://mock-api.driven.com.br/api/v7/cineflex/seats/book-many`, reserveSeats); //BOOK-MANY PARA ASSENTOS\n          promisse.then(() =&gt; navigate(\'/success-screen\'));\n          promisse.catch(() =&gt; window.location.reload(true));\n        }else{\n          alert(`Ohe os campos dos assentos selecionados, existem alguns assentos que estão vazios, ou que não foram confirmados.`);\n</FONT><A NAME="3"></A><FONT color = #00FFFF><A HREF="match3-0.html#3" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_3_7.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n          return;\n        }\n      }\n    }else{\n      alert("selecione os assentos desejados para continuar.");\n      return;\n    }\n  }\n\n  return(\n    &lt;Fragment&gt;\n      &lt;main className="main-container"&gt;\n        &lt;div className="main-title-container"&gt;\n          &lt;h2 className="main-title"&gt;Selecione o(s) assento(s)&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-container\'&gt;\n          &lt;div className=\'seats-content\'&gt;\n            { sectionDetaisReader }\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\'seats-subtitle-container\'&gt;\n          &lt;div className=\'seats-subtitle-content\'&gt;\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-selected\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Selecionado&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-available\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Disponível&lt;/p&gt;\n            &lt;/div&gt;\n\n            &lt;div className=\'seat-subtitle\'&gt;\n              &lt;div className=\'seat-subtitle-unavailable\'&gt;&lt;/div&gt;\n              &lt;p className=\'seat-subtitle-title\'&gt;Indisponível&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;form className=\'form\'&gt;\n          { reserveSeats.ids.length === 0 ?\n            &lt;p className=\'form-info\'&gt;Pselecione os assentos desejados.&lt;/p&gt;\n</FONT><A NAME="5"></A><FONT color = #FF0000><A HREF="match3-0.html#5" TARGET="0"><IMG SRC="http://moss.stanford.edu/bitmaps/tm_0_4.gif" ALT="other" BORDER="0" ALIGN=left></A>\n\n            :\n            &lt;Fragment&gt;\n              {reserveSeatsReader}\n            &lt;/Fragment&gt;\n          }\n\n          &lt;button onClick={() =&gt; sendObject()} type="button" className={`form-button ${buttonOpacity}`}&gt;Reservar assento(s)&lt;/button&gt;\n        &lt;/form&gt;\n\n        &lt;Bottombar title={sectionDetais.movie.title} posterURL={sectionDetais.movie.posterURL} weekday={sectionDetais.day.weekday} showtime={sectionDetais.name} /&gt;\n      &lt;/main&gt;\n    &lt;/Fragment&gt;\n  );\n}\n /* &lt;filePath&gt; ------------------- Arquivo: Sectionsecond_mask.js ------------------- &lt;/filePath&gt; */ \nexport const cpfMask = value =&gt; {\n    return value\n      .replace(/\\D/g, \'\') \n      .replace(/(\\d{3})(\\d)/, \'$1.$2\') \n      .replace(/(\\d{3})(\\d)/, \'$1.$2\')\n      .replace(/(\\d{3})(\\d{1,2})/, \'$1-$2\')\n      .replace(/(-\\d{2})\\d+?$/, \'$1\') \n</FONT>  }</PRE>\n</PRE>\n</BODY>\n</HTML>\n',
        ],
      },
    },
  ],
  matchsBack: [],
};
